{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\VISHAL\\\\Desktop\\\\Kabra Project\\\\Frontend\\\\src\\\\loginPage\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState } from \"react\";\nimport LoginContext from \"../context/loginContext\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { Card, CardBody, Button, Form, FormGroup, Input, Row, Col, InputGroupAddon, InputGroup, InputGroupText, Alert } from \"reactstrap\";\n\nconst urlconfig = require(\"../config/urlsconfig.json\");\n\nconst config = require(\"../config/config.json\");\n\nconst Login = props => {\n  _s();\n\n  const history = useHistory();\n  const {\n    isLoggedIn,\n    toggleLogIn\n  } = useContext(LoginContext);\n  let [userName, setUserName] = useState(\"\");\n  let [password, setPassword] = useState(\"\");\n  let [isAdmin, setAdmin] = useState(true);\n  const inputs = [\"username\", \"password\"];\n  const [isLoginSuccessful, setIsLoginSuccessful] = useState(true);\n\n  const changeUserName = e => {\n    setUserName(userName = e.target.value);\n  };\n\n  const changePassword = e => {\n    setPassword(password = e.target.value);\n  };\n\n  const getRole = () => {\n    return isAdmin ? \"Admin\" : \"Member\";\n  };\n\n  const submitLogin = () => {\n    const body = {\n      userName: userName,\n      password: password\n    };\n    if (isAdmin) body.type = \"Admin\";else body.type = \"Member\";\n    body = JSON.stringify(body);\n    fetch(`${config.baseURL}${urlconfig.login.uri}`, {\n      method: urlconfig.login.method,\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: body\n    }).then(res => {\n      inputs.forEach(input => {\n        document.getElementById(input).value = \"\";\n      });\n\n      if (res.status === 200) {\n        return res.json();\n      } else {\n        setIsLoginSuccessful(false);\n      }\n    }).then(response => {\n      console.log(\"response\", response.userName);\n      localStorage.setItem(\"token\", response.token);\n      localStorage.setItem(\"user\", response.userName);\n      localStorage.setItem(\"userId\", response.userId);\n      localStorage.setItem(\"type\", getRole());\n      toggleLogIn();\n\n      if (isAdmin) {\n        history.push(\"/\");\n      } else {\n        history;\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        xs: \"4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        xs: \"4\",\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(CardBody, {\n            children: [/*#__PURE__*/_jsxDEV(Form, {\n              children: /*#__PURE__*/_jsxDEV(FormGroup, {\n                children: [/*#__PURE__*/_jsxDEV(InputGroup, {\n                  size: \"sm\",\n                  children: [/*#__PURE__*/_jsxDEV(InputGroupAddon, {\n                    addonType: \"prepend\",\n                    children: /*#__PURE__*/_jsxDEV(InputGroupText, {\n                      children: \"USERNAME\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 99,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 98,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Input, {\n                    size: \"sm\",\n                    type: \"text\",\n                    name: \"username\",\n                    id: \"username\",\n                    onChange: changeUserName,\n                    autoComplete: \"off\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 101,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 97,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 110,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n                  size: \"sm\",\n                  children: [/*#__PURE__*/_jsxDEV(InputGroupAddon, {\n                    addonType: \"prepend\",\n                    children: /*#__PURE__*/_jsxDEV(InputGroupText, {\n                      children: \"PASSWORD\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 113,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 112,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Input, {\n                    size: \"sm\",\n                    type: \"password\",\n                    name: \"password\",\n                    id: \"password\",\n                    onChange: changePassword\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 115,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 111,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 124,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  block: true,\n                  color: \"info\",\n                  size: \"sm\",\n                  onClick: submitLogin,\n                  children: \"LOGIN\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 125,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 15\n            }, this), !isLoginSuccessful ? /*#__PURE__*/_jsxDEV(Alert, {\n              color: \"danger\",\n              children: \" Invalid Credentials!!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(React.Fragment, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        xs: \"4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"F7PrpOOLlBQwN2M2/KWxebdlIIs=\", false, function () {\n  return [useHistory];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["C:/Users/VISHAL/Desktop/Kabra Project/Frontend/src/loginPage/index.js"],"names":["React","useContext","useState","LoginContext","Link","useHistory","Card","CardBody","Button","Form","FormGroup","Input","Row","Col","InputGroupAddon","InputGroup","InputGroupText","Alert","urlconfig","require","config","Login","props","history","isLoggedIn","toggleLogIn","userName","setUserName","password","setPassword","isAdmin","setAdmin","inputs","isLoginSuccessful","setIsLoginSuccessful","changeUserName","e","target","value","changePassword","getRole","submitLogin","body","type","JSON","stringify","fetch","baseURL","login","uri","method","headers","then","res","forEach","input","document","getElementById","status","json","response","console","log","localStorage","setItem","token","userId","push"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from \"react\";\r\nimport LoginContext from \"../context/loginContext\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Button,\r\n  Form,\r\n  FormGroup,\r\n  Input,\r\n  Row,\r\n  Col,\r\n  InputGroupAddon,\r\n  InputGroup,\r\n  InputGroupText,\r\n  Alert,\r\n} from \"reactstrap\";\r\n\r\nconst urlconfig = require(\"../config/urlsconfig.json\");\r\nconst config = require(\"../config/config.json\");\r\n\r\nconst Login = (props) => {\r\n  const history = useHistory();\r\n  const { isLoggedIn, toggleLogIn } = useContext(LoginContext);\r\n  let [userName, setUserName] = useState(\"\");\r\n  let [password, setPassword] = useState(\"\");\r\n  let [isAdmin, setAdmin] = useState(true);\r\n  const inputs = [\"username\", \"password\"];\r\n  const [isLoginSuccessful, setIsLoginSuccessful] = useState(true);\r\n\r\n  const changeUserName = (e) => {\r\n    setUserName((userName = e.target.value));\r\n  };\r\n\r\n  const changePassword = (e) => {\r\n    setPassword((password = e.target.value));\r\n  };\r\n  const getRole = () => {\r\n    return isAdmin ? \"Admin\" : \"Member\";\r\n  };\r\n\r\n  const submitLogin = () => {\r\n    const body = {\r\n      userName: userName,\r\n      password: password,\r\n    };\r\n    if (isAdmin) body.type = \"Admin\";\r\n    else body.type = \"Member\";\r\n    body = JSON.stringify(body);\r\n    fetch(`${config.baseURL}${urlconfig.login.uri}`, {\r\n      method: urlconfig.login.method,\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: body,\r\n    })\r\n      .then((res) => {\r\n        inputs.forEach((input) => {\r\n          document.getElementById(input).value = \"\";\r\n        });\r\n        if (res.status === 200) {\r\n          return res.json();\r\n        } else {\r\n          setIsLoginSuccessful(false);\r\n        }\r\n      })\r\n      .then((response) => {\r\n        console.log(\"response\", response.userName);\r\n        localStorage.setItem(\"token\", response.token);\r\n        localStorage.setItem(\"user\", response.userName);\r\n        localStorage.setItem(\"userId\", response.userId);\r\n        localStorage.setItem(\"type\", getRole());\r\n        toggleLogIn();\r\n        if (isAdmin) {\r\n          history.push(\"/\");\r\n        }else{\r\n          history\r\n        }\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <Row>\r\n        <Col xs=\"4\"></Col>\r\n        <Col xs=\"4\">\r\n          <Card>\r\n            <CardBody>\r\n              <Form>\r\n                <FormGroup>\r\n                  <InputGroup size=\"sm\">\r\n                    <InputGroupAddon addonType=\"prepend\">\r\n                      <InputGroupText>USERNAME</InputGroupText>\r\n                    </InputGroupAddon>\r\n                    <Input\r\n                      size=\"sm\"\r\n                      type=\"text\"\r\n                      name=\"username\"\r\n                      id=\"username\"\r\n                      onChange={changeUserName}\r\n                      autoComplete=\"off\"\r\n                    />\r\n                  </InputGroup>\r\n                  <br />\r\n                  <InputGroup size=\"sm\">\r\n                    <InputGroupAddon addonType=\"prepend\">\r\n                      <InputGroupText>PASSWORD</InputGroupText>\r\n                    </InputGroupAddon>\r\n                    <Input\r\n                      size=\"sm\"\r\n                      type=\"password\"\r\n                      name=\"password\"\r\n                      id=\"password\"\r\n                      onChange={changePassword}\r\n                    />\r\n                  </InputGroup>\r\n\r\n                  <br />\r\n                  <Button block color=\"info\" size=\"sm\" onClick={submitLogin}>\r\n                    LOGIN\r\n                  </Button>\r\n                </FormGroup>\r\n              </Form>\r\n              {!isLoginSuccessful ? (\r\n                <Alert color=\"danger\"> Invalid Credentials!!</Alert>\r\n              ) : (\r\n                <React.Fragment />\r\n              )}\r\n            </CardBody>\r\n          </Card>\r\n        </Col>\r\n        <Col xs=\"4\"></Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"]},"metadata":{},"sourceType":"module"}