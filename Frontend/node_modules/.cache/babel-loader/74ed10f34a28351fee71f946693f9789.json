{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\VISHAL\\\\Desktop\\\\Kabra Project\\\\Frontend\\\\src\\\\Templates\\\\viewCart.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Card, CardBody, CardFooter, CardImg, CardSubtitle, CardText, CardTitle, Button, Row, NavLink, ButtonGroup, Input } from \"reactstrap\";\nimport urlConfig from \"../config/urlsconfig.json\";\nimport config from \"../config/config.json\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport ProductCard from \"./productCard\";\n\nconst _ = require(\"lodash\");\n\nconst getRole = localStorage.getItem(\"type\");\n\nconst ViewCart = ({\n  match\n}) => {\n  _s();\n\n  console.log(\"@@@@@@@@\", getRole);\n  let [orders, updateOrders] = useState(\"\");\n  const history = useHistory();\n  const userId = localStorage.getItem(\"userId\");\n  let [products, setProducts] = useState([]);\n  let [Userid, setUserId] = useState(\"\");\n  let [price, setPrice] = useState(\"\");\n\n  const changeProduct = e => {\n    setProducts(products = e.target.value);\n  };\n\n  const changeUserId = e => {\n    setUserId(Userid = e.target.value);\n  };\n\n  const changePrice = e => {\n    setPrice(price = e.target.value);\n  };\n\n  const token = localStorage.getItem(\"token\");\n  let url = `${config.baseURL}${urlConfig.editorder.uri}`;\n  url = url.replace(\":id\", match.params.id);\n  url = url.replace(\":userId\", userId);\n  console.log(\"url\", url);\n  fetch(url, {\n    method: urlConfig.editorder.method,\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: `bearer ${token}`,\n      type: getRole\n    }\n  }).then(res => {\n    if (res.status === 200) {\n      return res.json();\n    }\n  });\n\n  const fetchOrder = () => {\n    let url = `${config.baseURL}${urlConfig.getorder.uri}`;\n    url = url.replace(\":id\", localStorage.getItem(\"orderId\"));\n    url = url.replace(\":userId\", userId);\n    fetch(url, {\n      method: urlConfig.getorder.method,\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": `bearer ${token}`,\n        \"type\": getRole\n      }\n    }).then(res => {\n      if (res.status === 200) {\n        return res.json();\n      }\n    }).then(response => {\n      setProducts(response.products);\n    });\n  };\n\n  useEffect(() => {\n    fetchOrder(match.params.id);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: products.map(product => {\n        return /*#__PURE__*/_jsxDEV(React.Fragment, {\n          id: \"container\",\n          children: [/*#__PURE__*/_jsxDEV(ProductCard, {\n            productName: product.productName,\n            productImage: product.productImage,\n            description: product.description,\n            unitPrice: product.unitPrice,\n            quantity: product.quantity,\n            _id: product._id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ViewCart, \"LDbs/VtCCI6Kn0QfbYYQEDF53wo=\", false, function () {\n  return [useHistory];\n});\n\n_c = ViewCart;\nexport default ViewCart;\n\nvar _c;\n\n$RefreshReg$(_c, \"ViewCart\");","map":{"version":3,"sources":["C:/Users/VISHAL/Desktop/Kabra Project/Frontend/src/Templates/viewCart.js"],"names":["React","useState","useEffect","Card","CardBody","CardFooter","CardImg","CardSubtitle","CardText","CardTitle","Button","Row","NavLink","ButtonGroup","Input","urlConfig","config","Link","useHistory","ProductCard","_","require","getRole","localStorage","getItem","ViewCart","match","console","log","orders","updateOrders","history","userId","products","setProducts","Userid","setUserId","price","setPrice","changeProduct","e","target","value","changeUserId","changePrice","token","url","baseURL","editorder","uri","replace","params","id","fetch","method","headers","Authorization","type","then","res","status","json","fetchOrder","getorder","response","map","product","productName","productImage","description","unitPrice","quantity","_id"],"mappings":"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","sourcesContent":["import React, { useState,useEffect } from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CardFooter,\r\n  CardImg,\r\n  CardSubtitle,\r\n  CardText,\r\n  CardTitle,\r\n  Button,\r\n  Row,\r\n  NavLink,\r\n  ButtonGroup,\r\n  Input,\r\n} from \"reactstrap\";\r\nimport urlConfig from \"../config/urlsconfig.json\";\r\nimport config from \"../config/config.json\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport ProductCard from \"./productCard\";\r\nconst _ = require(\"lodash\");\r\nconst getRole = localStorage.getItem(\"type\");\r\n\r\nconst ViewCart = ({match}) => {\r\n  console.log(\"@@@@@@@@\", getRole);\r\n  let [orders, updateOrders] = useState(\"\");\r\n  const history = useHistory();\r\n  const userId = localStorage.getItem(\"userId\");\r\n  let [products, setProducts] = useState([]);\r\n  let [Userid, setUserId] = useState(\"\");\r\n  let [price, setPrice] = useState(\"\");\r\n\r\n  const changeProduct = (e) => {\r\n    setProducts((products = e.target.value));\r\n  };\r\n  const changeUserId = (e) => {\r\n    setUserId((Userid = e.target.value));\r\n  };\r\n  const changePrice = (e) => {\r\n    setPrice((price = e.target.value));\r\n  };\r\n\r\n\r\n  const token = localStorage.getItem(\"token\");\r\n\r\n  let url = `${config.baseURL}${urlConfig.editorder.uri}`;\r\n  url = url.replace(\":id\", match.params.id);\r\n  url = url.replace(\":userId\", userId);\r\n  console.log(\"url\", url);\r\n  fetch(url, {\r\n    method: urlConfig.editorder.method,\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `bearer ${token}`,\r\n      type: getRole,\r\n    },\r\n  }).then((res) => {\r\n    if (res.status === 200) {\r\n      return res.json();\r\n    }\r\n  });\r\n  const fetchOrder = () => {\r\n    let url = `${config.baseURL}${urlConfig.getorder.uri}`;\r\n    url = url.replace(\":id\",localStorage.getItem(\"orderId\") );\r\n    url = url.replace(\":userId\", userId);\r\n    fetch(url, {\r\n      method: urlConfig.getorder.method,\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"Authorization\": `bearer ${token}`,\r\n        \"type\": getRole\r\n      },\r\n    })\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          return res.json();\r\n        }\r\n      })\r\n      .then((response) => {\r\n          setProducts(response.products);\r\n    \r\n      });\r\n  };\r\n  useEffect(() => {\r\n    fetchOrder(match.params.id);\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n    <br/>\r\n      <React.Fragment>\r\n      {products.map((product) => {\r\n        return (\r\n          <React.Fragment id=\"container\">\r\n            <ProductCard\r\n              productName={product.productName}\r\n              productImage={product.productImage}\r\n              description={product.description}\r\n              unitPrice={product.unitPrice}\r\n              quantity={product.quantity}\r\n              _id={product._id}\r\n            />\r\n            <br />\r\n          </React.Fragment>\r\n        );\r\n      })}\r\n\r\n       \r\n      </React.Fragment>\r\n    </div>\r\n  );\r\n};\r\nexport default ViewCart;\r\n"]},"metadata":{},"sourceType":"module"}